/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as SearchImport } from './routes/search'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as PlugininstallImport } from './routes/plugininstall'
import { Route as DonateImport } from './routes/donate'
import { Route as AboutImport } from './routes/about'
import { Route as FavoritesRouteImport } from './routes/favorites/route'
import { Route as IndexImport } from './routes/index'
import { Route as PluginsIndexImport } from './routes/plugins.index'
import { Route as PlaylistsIndexImport } from './routes/playlists.index'
import { Route as PlaylistsPlaylistIdImport } from './routes/playlists.$playlistId'
import { Route as FavoritesVideosImport } from './routes/favorites/videos'
import { Route as FavoritesPlaylistsImport } from './routes/favorites/playlists'
import { Route as FavoritesChannelsImport } from './routes/favorites/channels'
import { Route as PluginsPluginIdIndexImport } from './routes/plugins/$pluginId.index'
import { Route as PluginsPluginIdOptionsImport } from './routes/plugins/$pluginId/options'
import { Route as PluginsPluginIdPlaylistsIndexImport } from './routes/plugins/$pluginId/playlists.index'
import { Route as PluginsPluginIdChannelsIndexImport } from './routes/plugins/$pluginId/channels.index'
import { Route as PluginsPluginIdVideosApiIdImport } from './routes/plugins/$pluginId/videos.$apiId'
import { Route as PluginsPluginIdPlaylistsApiIdImport } from './routes/plugins/$pluginId/playlists.$apiId'
import { Route as PluginsPluginIdChannelsApiIdIndexImport } from './routes/plugins/$pluginId/channels.$apiId.index'
import { Route as PluginsPluginIdChannelsApiIdLiveImport } from './routes/plugins/$pluginId/channels.$apiId.live'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyRoute = PrivacyImport.update({
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const PlugininstallRoute = PlugininstallImport.update({
  path: '/plugininstall',
  getParentRoute: () => rootRoute,
} as any)

const DonateRoute = DonateImport.update({
  path: '/donate',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const FavoritesRouteRoute = FavoritesRouteImport.update({
  path: '/favorites',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PluginsIndexRoute = PluginsIndexImport.update({
  path: '/plugins/',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistsIndexRoute = PlaylistsIndexImport.update({
  path: '/playlists/',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistsPlaylistIdRoute = PlaylistsPlaylistIdImport.update({
  path: '/playlists/$playlistId',
  getParentRoute: () => rootRoute,
} as any)

const FavoritesVideosRoute = FavoritesVideosImport.update({
  path: '/videos',
  getParentRoute: () => FavoritesRouteRoute,
} as any)

const FavoritesPlaylistsRoute = FavoritesPlaylistsImport.update({
  path: '/playlists',
  getParentRoute: () => FavoritesRouteRoute,
} as any)

const FavoritesChannelsRoute = FavoritesChannelsImport.update({
  path: '/channels',
  getParentRoute: () => FavoritesRouteRoute,
} as any)

const PluginsPluginIdIndexRoute = PluginsPluginIdIndexImport.update({
  path: '/plugins/$pluginId/',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdOptionsRoute = PluginsPluginIdOptionsImport.update({
  path: '/plugins/$pluginId/options',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdPlaylistsIndexRoute =
  PluginsPluginIdPlaylistsIndexImport.update({
    path: '/plugins/$pluginId/playlists/',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdChannelsIndexRoute =
  PluginsPluginIdChannelsIndexImport.update({
    path: '/plugins/$pluginId/channels/',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdVideosApiIdRoute = PluginsPluginIdVideosApiIdImport.update(
  {
    path: '/plugins/$pluginId/videos/$apiId',
    getParentRoute: () => rootRoute,
  } as any,
)

const PluginsPluginIdPlaylistsApiIdRoute =
  PluginsPluginIdPlaylistsApiIdImport.update({
    path: '/plugins/$pluginId/playlists/$apiId',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdChannelsApiIdIndexRoute =
  PluginsPluginIdChannelsApiIdIndexImport.update({
    path: '/plugins/$pluginId/channels/$apiId/',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdChannelsApiIdLiveRoute =
  PluginsPluginIdChannelsApiIdLiveImport.update({
    path: '/plugins/$pluginId/channels/$apiId/live',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/favorites': {
      preLoaderRoute: typeof FavoritesRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/donate': {
      preLoaderRoute: typeof DonateImport
      parentRoute: typeof rootRoute
    }
    '/plugininstall': {
      preLoaderRoute: typeof PlugininstallImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/favorites/channels': {
      preLoaderRoute: typeof FavoritesChannelsImport
      parentRoute: typeof FavoritesRouteImport
    }
    '/favorites/playlists': {
      preLoaderRoute: typeof FavoritesPlaylistsImport
      parentRoute: typeof FavoritesRouteImport
    }
    '/favorites/videos': {
      preLoaderRoute: typeof FavoritesVideosImport
      parentRoute: typeof FavoritesRouteImport
    }
    '/playlists/$playlistId': {
      preLoaderRoute: typeof PlaylistsPlaylistIdImport
      parentRoute: typeof rootRoute
    }
    '/playlists/': {
      preLoaderRoute: typeof PlaylistsIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/': {
      preLoaderRoute: typeof PluginsIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/options': {
      preLoaderRoute: typeof PluginsPluginIdOptionsImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/': {
      preLoaderRoute: typeof PluginsPluginIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/playlists/$apiId': {
      preLoaderRoute: typeof PluginsPluginIdPlaylistsApiIdImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/videos/$apiId': {
      preLoaderRoute: typeof PluginsPluginIdVideosApiIdImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/channels/': {
      preLoaderRoute: typeof PluginsPluginIdChannelsIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/playlists/': {
      preLoaderRoute: typeof PluginsPluginIdPlaylistsIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/channels/$apiId/live': {
      preLoaderRoute: typeof PluginsPluginIdChannelsApiIdLiveImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/channels/$apiId/': {
      preLoaderRoute: typeof PluginsPluginIdChannelsApiIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  FavoritesRouteRoute.addChildren([
    FavoritesChannelsRoute,
    FavoritesPlaylistsRoute,
    FavoritesVideosRoute,
  ]),
  AboutRoute,
  DonateRoute,
  PlugininstallRoute,
  PrivacyRoute,
  SearchRoute,
  SettingsRoute,
  PlaylistsPlaylistIdRoute,
  PlaylistsIndexRoute,
  PluginsIndexRoute,
  PluginsPluginIdOptionsRoute,
  PluginsPluginIdIndexRoute,
  PluginsPluginIdPlaylistsApiIdRoute,
  PluginsPluginIdVideosApiIdRoute,
  PluginsPluginIdChannelsIndexRoute,
  PluginsPluginIdPlaylistsIndexRoute,
  PluginsPluginIdChannelsApiIdLiveRoute,
  PluginsPluginIdChannelsApiIdIndexRoute,
])

/* prettier-ignore-end */
